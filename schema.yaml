openapi: 3.0.3
info:
  title: Projeto final - Escola Kenzie
  version: 1.0.0
  description: Esta API oferece recursos abrangentes para facilitar o cadastro de
    novos usuários e alunos, bem como a criação e organização de cursos e conteudos
    e matrícula e desmatrícula de alunos. Simplificamos o processo de gerenciamento
    de uma escola, proporcionando uma experiência mais eficiente e amigável para os
    usuários.
paths:
  /api/accounts/:
    get:
      operationId: api_accounts_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
    post:
      operationId: api_accounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/courses/:
    get:
      operationId: api_courses_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: api_courses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{course_id}/contents/:
    get:
      operationId: api_courses_contents_list
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
    post:
      operationId: api_courses_contents_create
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
  /api/courses/{course_id}/contents/{id}/:
    get:
      operationId: api_courses_contents_retrieve
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    put:
      operationId: api_courses_contents_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    patch:
      operationId: api_courses_contents_partial_update
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    delete:
      operationId: api_courses_contents_destroy
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{course_id}/students/{student_id}/:
    delete:
      operationId: api_courses_students_destroy
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: student_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: api_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{id}/students/:
    get:
      operationId: api_courses_students_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          description: ''
    put:
      operationId: api_courses_students_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          description: ''
    patch:
      operationId: api_courses_students_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentCourse'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/login/refresh/:
    post:
      operationId: api_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 100
        is_superuser:
          type: boolean
      required:
      - email
      - id
      - password
      - username
    Content:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        content:
          type: string
        video_url:
          type: string
          nullable: true
          maxLength: 200
      required:
      - content
      - id
      - name
    Course:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/CourseStatusEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        instructor:
          type: string
          format: uuid
          nullable: true
        contents:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        students_courses:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - contents
      - end_date
      - id
      - name
      - start_date
      - students_courses
    CourseStatusEnum:
      enum:
      - in progress
      - finished
      - not started
      type: string
      description: |-
        * `in progress` - In Progress
        * `finished` - Finished
        * `not started` - Default
    PatchedContent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        content:
          type: string
        video_url:
          type: string
          nullable: true
          maxLength: 200
    PatchedCourse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/CourseStatusEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        instructor:
          type: string
          format: uuid
          nullable: true
        contents:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        students_courses:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
    PatchedStudentCourse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseRepresentation'
    StudentCourse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        students_courses:
          type: array
          items:
            $ref: '#/components/schemas/StudentCourseRepresentation'
      required:
      - id
      - name
      - students_courses
    StudentCourseRepresentation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        student_id:
          type: string
          readOnly: true
        student_username:
          type: string
          readOnly: true
        student_email:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StudentCourseRepresentationStatusEnum'
      required:
      - id
      - student_email
      - student_id
      - student_username
    StudentCourseRepresentationStatusEnum:
      enum:
      - pending
      - accepted
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
